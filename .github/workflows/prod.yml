name: PROD

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Configure AWS credentials from prod
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - uses: actions/setup-node@v2
      - run: yarn main install # will run `yarn install` command
      - run: yarn main build # will run `yarn build` command
        env:
          VUE_APP_CAPTCHA_SITE_KEY: ${{ secrets.PROD_VUE_APP_CAPTCHA_SITE_KEY }}
          VUE_APP_MAIN_URL: ${{ secrets.PROD_VUE_APP_MAIN_URL }}
          VUE_APP_TENANT_URL: ${{ secrets.PROD_VUE_APP_TENANT_URL }}
          VUE_APP_FULL_TENANT_URL: ${{ secrets.PROD_VUE_APP_FULL_TENANT_URL }}
          VUE_APP_DOCS_URL: ${{ secrets.PROD_VUE_APP_DOCS_URL }}
          VUE_APP_OWNER_URL: ${{ secrets.PROD_VUE_APP_OWNER_URL }}
          VUE_APP_API_URL: ${{ secrets.PROD_VUE_APP_API_URL }}
          VUE_APP_SSO_ENDPOINT: ${{ secrets.PROD_VUE_APP_SSO_ENDPOINT }}
          VUE_APP_REGISTER_URL: ${{ secrets.PROD_VUE_APP_REGISTER_URL }}
          VUE_APP_SSO_CLIENT_ID: ${{ secrets.PROD_VUE_APP_SSO_CLIENT_ID }}
      - name: Copy files to prod with the AWS CLI
        run: |
          aws s3 sync ./main/dist s3://www.dossierfacile.fr --delete --acl public-read --cache-control max-age=31536000,public
          aws s3 cp s3://www.dossierfacile.fr/index.html s3://www.dossierfacile.fr/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read
          aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_AWS_MAIN_CLOUDFRONT_ID }} --paths '/*'
      
      - uses: actions/setup-node@v2
      - run: yarn tenant install
      - run: yarn tenant build
        env:
          VUE_APP_CAPTCHA_SITE_KEY: ${{ secrets.PROD_VUE_APP_CAPTCHA_SITE_KEY }}
          VUE_APP_MAIN_URL: ${{ secrets.PROD_VUE_APP_MAIN_URL }}
          VUE_APP_TENANT_URL: ${{ secrets.PROD_VUE_APP_TENANT_URL }}
          VUE_APP_FULL_TENANT_URL: ${{ secrets.PROD_VUE_APP_FULL_TENANT_URL }}
          VUE_APP_DOCS_URL: ${{ secrets.PROD_VUE_APP_DOCS_URL }}
          VUE_APP_OWNER_URL: ${{ secrets.PROD_VUE_APP_OWNER_URL }}
          VUE_APP_API_URL: ${{ secrets.PROD_VUE_APP_API_URL }}
          VUE_APP_SSO_ENDPOINT: ${{ secrets.PROD_VUE_APP_SSO_ENDPOINT }}
          VUE_APP_REGISTER_URL: ${{ secrets.PROD_VUE_APP_REGISTER_URL }}
          VUE_APP_SSO_CLIENT_ID: ${{ secrets.PROD_VUE_APP_SSO_CLIENT_ID }}
      - name: Copy files to prod website with the AWS CLI
        run: |
          aws s3 sync ./tenant/dist s3://locataire.dossierfacile.fr --delete --acl public-read --cache-control max-age=31536000,public
          aws s3 cp s3://locataire.dossierfacile.fr/index.html s3://locataire.dossierfacile.fr/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read
          aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_AWS_TENANT_CLOUDFRONT_ID }} --paths '/*'
